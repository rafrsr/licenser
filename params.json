{
  "name": "Licenser",
  "tagline": "Adds license headers to your source files",
  "body": "# Licenser\r\n\r\nAutomates the prepending of a license header doc block to your directory(ies) of source files.\r\n\r\n- Accept a directory of source files or a path to a single source file to process\r\n- Accept a file path containing your custom license doc block\r\n- Can check your source files for the correct license information\r\n\r\n### Install\r\n\r\n1. [Install composer](https://getcomposer.org/download/)\r\n2. Execute: `require rafrsr/licenser --dev`\r\n3. Run `./bin/licenser /path/to/source/files /path/to/license/file` to process source files\r\n\r\n### Using a built-in license type\r\n\r\nLicenser supports the following built-in licenses and headers:\r\n\r\n- The Apache 2.0 license (referred to as `apache2.0` in Licenser)\r\n- The MIT license (referred to as `mit` in Licenser)\r\n- Default - Is not a license, is a common header to add to any project (referred to as `default` in Licenser)\r\n- Package - Similar to default but allow a package name (referred to as `package` in Licenser)\r\n\r\nTo use one of these built-in licenses you just replace the path to your custom licenses file with the name of the built-in license instead. \r\nFor example if you wanted to use the MIT license then you would run something like:\r\n\r\n````bash\r\n./bin/licenser run /path/to/files mit\r\n````\r\n\r\nThe `default` header is used when run something like this:\r\n````bash\r\n./bin/licenser run /path/to/files\r\n````\r\n\r\n### Value replacement in built-in licenses\r\nWhen using a built-in license the Licenser will replace special placeholders with custom values. \r\nPlaceholder can vary according to license:\r\n\r\n| license  | placeholders  |   \r\n|---|---|\r\n| default  | author, package, version  |\r\n| mit  | author  | \r\n| apache2.0  | author  | \r\n| symfony  | author, package  |\r\n\r\n````bash\r\n./bin/licenser /path/to/files -p author:\"Author Name <email@example.com>\" -p version:1.0\r\n./bin/licenser /path/to/files mit -p author:\"Author Name <email@example.com>\"\r\n./bin/licenser /path/to/files apache2.0 -p author:\"Author Name <email@example.com>\"\r\n./bin/licenser /path/to/files symfony -p author:\"Author Name <email@example.com>\" -p package:MyPHPPackage\r\n````\r\n### Creating your custom license template\r\n\r\nLicense template can be created using a simple text file. \r\nLicense templates are processed using [Twig](http://twig.sensiolabs.org/), then can use any twig feature.\r\n\r\n##### e.g.\r\n````\r\nThis file is part of the {{ package }}.\r\n\r\n(c) {{ 'now'|date('Y') }}\r\n\r\n@version {{ version }}\r\n\r\nFor the full copyright and license information, please view the LICENSE\r\nfile that was distributed with this source code.\r\n````\r\n\r\nTo process this license:\r\n````bash\r\n./bin/licenser /path/to/files /path/to/license -p package:MyPHPPackage -p version:1.0\r\n````\r\n\r\n> NOTE: parameters passed in the commandline can be used in the license template\r\n\r\n### Checking files for correct license\r\n\r\nLicenser also allows you to check your source files for correct license information.\r\nIt will warn you if there are any source files that do not have a license header that matches the options you provide.\r\n\r\n````bash\r\n./bin/licenser /path/to/files mit --only-check\r\n````\r\n\r\nBy default the check only return if all files are ok or not, bu can use verbosity levels to view more details.\r\n\r\n````bash\r\n./bin/licenser /path/to/files mit --only-check -vv\r\n````\r\n\r\n> Verbosity levels are available in all actions\r\n\r\n### Dry-run\r\n\r\nLicenser also allows you to verify all available changes using a `dry-run`. Is a mix between normal process and `only-check`, \r\nverify all changes to see affected files before adding headers.\r\n\r\n````bash\r\n./bin/licenser /path/to/files mit --dry-run -vv\r\n````\r\n\r\n### YML configuration per project\r\n\r\nLicenser support create a `.yml` file for each project with custom settings. \r\nIs helpful to use a global installation of Licenser and same commandline for all projects.\r\n\r\nCreate a yml file under your project directory\r\n\r\n#### e.g:\r\n````yml\r\n#.licenser.yml\r\nfinder:\r\n  in: \r\n    - src\r\n    - tests\r\nlicense: default\r\nparameters:\r\n   author: Rafael SR <https://github.com/rafrsr>\r\n   package: Licenser\r\n   version: '@Rafrsr\\Licenser\\Licenser::VERSION'\r\n````\r\n\r\n#### Usage\r\n````bash\r\n./bin/licenser --config=.licenser.yml\r\n````\r\n\r\n### YML Settings\r\n\r\n- **finder:** used to create instance of Finder to locate source files\r\n    - **in:** _[array, string]_ relative dir to find files\r\n    - **name:** _[array, string]_ name of files to process (default: *.php)\r\n- **license:**  _[string]_ name of build-in license to use or relative filename    \r\n- **license_content:**  _[string]_ alternative to create your license inline without reference to any file\r\n- **parameters:** _[array]_ array of parameters to pass to template  \r\n\r\n> NOTE: can reference to a constant in parameters using `@` before the name of the constant, e.g: `@Rafrsr\\Licenser\\Licenser::VERSION`\r\n\r\n### Caution\r\n\r\nIt is recommended that you have your source files under version control when running \r\nthe tool as it is still experimental.\r\n\r\n## Copyright\r\n\r\nThis project is licensed under the [MIT license](LICENSE).",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}